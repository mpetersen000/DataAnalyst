library(ggplot2) #must load the ggplot package first
data(diamonds)
dim(diamonds)
summary(diamonds)
ggplot(aes(x = price, y = x), data = diamonds) +
geom_point() +
ggplot(aes(x = price, y = x), data = diamonds) +
geom_point() +
ggplot(aes(x = price, y = x), data = diamonds) +
geom_point()
ggplot(aes(x = price, y = diamonds$x), data = diamonds) +
geom_point()
ggplot(aes(x = diamonds$x, y = diamonds$price), data = diamonds) +
geom_point()
ggplot(aes(x = diamonds$price, y = diamonds$x), data = diamonds) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(3, 91)
coord_trans( y = "sqrt")
ggplot(aes(x = diamonds$price, y = diamonds$x), data = diamonds) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(3, 91) +
coord_trans( y = "sqrt")
ggplot(aes(x = diamonds$x, y = diamonds$price), data = diamonds) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(3, 91) +
coord_trans( y = "sqrt")
ggplot(aes(x = diamonds$x, y = diamonds$price), data = diamonds) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(3, 91) +
coord_trans( y = "log10")
ggplot(aes(x = diamonds$x, y = diamonds$price), data = diamonds) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(3, 91)
ggplot(aes(x = diamonds$x, y = diamonds$price), data = diamonds) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(3, 10)
ggplot(aes(x = diamonds$price, y = diamonds$x), data = diamonds) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(3, 10) +
coord_trans( y = "log10")
ggplot(aes(x = diamonds$price, y = diamonds$x), data = diamonds) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(0, 10)
ggplot(aes(x = diamonds$price, y = diamonds$x), data = diamonds) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
ylim(0, 10)
cor.test(diamonds$price, diamonds$x)
cor.test(diamonds$price, diamonds$y)
cor.test(diamonds$price, diamonds$z)
ggplot(aes(x = diamonds$price, y = diamonds$depth), data = diamonds)
ggplot(aes(x = diamonds$price, y = diamonds$depth), data = diamonds)
ggplot(aes(x = diamonds$price, y = diamonds$depth), data = diamonds) +
geom_point()
summary(diamonds$depth)
cor.test(diamonds$price, diamonds$depth)
ggplot(aes(x = price99, y = diamonds$carat),
data = subset(diamonds, quantile(diamonds$price, 0.99)
& quantile(diamonds$carat, 0.99))) +
geom_point()
ggplot(aes(x = diamonds$price, y = diamonds$carat),
data = subset(diamonds, quantile(diamonds$price, 0.99)
& quantile(diamonds$carat, 0.99))) +
ggplot(aes(x = diamonds$price, y = diamonds$carat),
data = subset(diamonds, quantile(diamonds$price, 0.99)
& quantile(diamonds$carat, 0.99))) +
geom_point()
diamonds$price99 <- quantile(diamonds$price, 0.99)
diamonds$carat99 <- quantile(diamonds$carat, 0.99)
ggplot(aes(x = diamonds$price99, y = diamonds$carat99),
data = diamonds) +
geom_point()
summary(diamonds$price99)
price99 <- quantile(diamonds$price, 0.99)
carat99 <- quantile(diamonds$carat, 0.99)
ggplot(aes(x = diamonds$price, y = diamonds$carat),
data = subset(diamonds$price < price99 & diamonds$carat < carat99)) +
geom_point()
ggplot(aes(x = diamonds$price, y = diamonds$carat),
data = subset(diamonds, diamonds$price < price99 & diamonds$carat < carat99)) +
geom_point()
summary(diamonds$price)
summary(diamonds$carat)
summary(price99)
summary(diamonds$carat)
summary(diamonds$price)
summary(carat99)
ggplot(aes(x = diamonds$price, y = diamonds$carat),
data = diamonds) +
geom_point() +
xlim(0, price99) +
xlim(0, carat99)
ggplot(aes(x = diamonds$price, y = diamonds$carat),
data = diamonds) +
geom_point() +
xlim(0, price99) +
ylim(0, carat99)
ggplot(aes(x = diamonds$carat, y = diamonds$price),
data = diamonds) +
geom_point() +
xlim(0, carat99) +
ylim(0, price99)
diamonds$by_volume <- diamonds$x * diamonds$y * diamonds$z
summary(diamonds$by_volume)
ggplot(aes(x = by_volume, y = price),
data = diamonds) +
geom_point()
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
summary(diamonds$volume)
ggplot(aes(x = price, y = volume),
data = diamonds) +
geom_point()
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
summary(diamonds$volume)
volume95 <- quantile(diamonds$volume, 0.95)
ggplot(aes(x = price, y = volume),
data = diamonds) +
geom_point() +
ylim(0, volume95)
ggplot(aes(x = price, y = volume),
data = diamonds) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
ylim(0, volume95)
with(subset(diamonds, volume > 0 & volume <= 800), cor.test(price, volume))
ggplot(aes(x = price, y = volume),
data = diamonds) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
ylim(0, volume95) +
coord_trans(x = "sqrt")
ggplot(aes(x = price, y = volume),
data = diamonds) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
ylim(1, volume95) +
coord_trans(x = "sqrt")
library(dplyr) #must load the ggplot package first
diamonds.price_by_clarity <- diamonds %>%
group_by(clarity) %>%
summarise(price_mean = mean(price),
price_median = median(price),
price_max = max(price),
price_min = min(price),
n = n()) %>%
arrange(clarity)
head(iamonds.price_by_clarity, 10)
head(diamonds.price_by_clarity, 10)
library(dplyr) #must load the dplyr package first
diamonds.price_by_clarity <- diamonds %>%
group_by(clarity) %>%
summarise(price_mean = mean(price),
price_median = median(price),
price_max = max(price),
price_min = min(price),
n = n()) %>%
arrange(clarity)
head(diamonds.price_by_clarity, 10)
library(dplyr) #must load the dplyr package first
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(price_mean = mean(price),
price_median = median(price),
price_max = max(price),
price_min = min(price),
n = n()) %>%
arrange(clarity)
head(diamondsByClarity, 1
# Create a dataframe diamonds by clarity
library(dplyr) #must load the dplyr package first
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(price_mean = mean(price),
price_median = median(price),
price_max = max(price),
price_min = min(price),
n = n()) %>%
arrange(clarity)
head(diamondsByClarity, 10)
library(dplyr) #must load the dplyr package first
diamonds$diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(price_mean = mean(price),
price_median = median(price),
price_max = max(price),
price_min = min(price),
n = n()) %>%
arrange(clarity)
head(diamondsByClarity, 10)
library(dplyr) #must load the dplyr package first
diamonds$diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(price_mean = mean(price),
price_median = median(price),
price_max = max(price),
price_min = min(price),
n = n()) %>%
arrange(clarity)
head(diamonds$diamondsByClarity, 10)
library(dplyr) #must load the dplyr package first
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(price_mean = mean(price),
price_median = median(price),
price_max = max(price),
price_min = min(price),
n = n()) %>%
arrange(clarity)
head(diamondsByClarity, 10)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(price_mean = mean(price),
price_median = median(price),
price_min = min(price),
price_max = max(price),
n = n()) %>%
arrange(clarity)
head(diamondsByClarity, 10)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(price_mean = mean(price),
price_median = median(as.numeric(price)),
price_min = min(price),
price_max = max(price),
n = n()) %>%
arrange(clarity)
head(diamondsByClarity, 20)
data(diamonds)
library(dplyr)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
summary(diamonds_mp_by_clarity)
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
summary(diamonds_mp_by_color)
data(diamonds)
library(dplyr)
library(gridExtra)
p1 <- ggplot(aes(x = clarity, y = mean_price,
data = diamonds_mp_by_clarity) +
geom_bar(stat = 'summary')
p2 <- ggplot(aes(x = color, y = mean_price,
data = subset(diamonds_mp_by_color) +
geom_bar(stat = 'summary')
grid.arrange(p2, p1, ncol = 1)
p1 <- ggplot(aes(x = clarity, y = mean_price),
data = diamonds_mp_by_clarity) +
geom_bar(stat="identity", color="blue", fill="white")
p2 <- ggplot(aes(x = color, y = mean_price),
data = subset(diamonds_mp_by_color) +
geom_bar(stat="identity", color="blue", fill="white")
grid.arrange(p2, p1, ncol = 1)
p1 <- ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_bar(stat="identity", color="blue", fill="white")
p2 <- ggplot(data = diamonds_mp_by_color, aes(x = color, y = mean_price)) +,
geom_bar(stat="identity", color="blue", fill="white")
grid.arrange(p2, p1, ncol = 1)
p1 <- ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_bar(stat="identity", color="blue", fill="white")
p2 <- ggplot(data = diamonds_mp_by_color, aes(x = color, y = mean_price)) +
geom_bar(stat="identity", color="blue", fill="white")
grid.arrange(p1, p2, ncol = 1)
read.delim('pseudo_facebook.tsv')
library(ggplot2)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_boxplot() +
stat_summary(fun.y = mean, geom = 'point', shape = 4)
pf = read.delim('pseudo_facebook.tsv')
library(ggplot2)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_boxplot() +
stat_summary(fun.y = mean, geom = 'point', shape = 4)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
+ geom_line(aes(color = gender), stat = 'summary', fun.y = median)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender), stat = 'summary', fun.y = median)
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(
mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
arrange(age)
head(pf.fc_by_age_gender, 20)
pf.fc_by_age_gender <- subset(pf, !is.na(gender)) %>%
group_by(age, gender) %>%
summarise(
mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
arrange(age)
head(pf.fc_by_age_gender, 20)
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(
mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age, gender)
head(pf.fc_by_age_gender, 6)
ggplot(aes(x = age, y = friend_count, color = gender),
data = pf.fc_by_age_gender) +
geom_line()
ggplot(aes(x = age, y = median_friend_count, color = gender),
data = pf.fc_by_age_gender) +
geom_line()
head(pf.fc_by_age_gender, 6)
library(tidyr)
spread(subset(pf.fc_by_age_gender,
select = c('gender', 'age', 'median_friend_count')),
gender, median_friend_count)
head(pf.fc_by_age_gender, 6)
head(pf.fc_by_age_gender, 6)
pf.fc_by_age_gender.wide1 <- dcastpf.fc_by_age_gender,
head(pf.fc_by_age_gender, 6)
pf.fc_by_age_gender.wide1 <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = "median_friend_count")
install.packages('reshape2')
library(reshape2)
head(pf.fc_by_age_gender, 6)
pf.fc_by_age_gender.wide1 <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
head(pf.fc_by_age_gender.wide1)
pf.fc_by_age_gender.wide2 <- spread(subset(pf.fc_by_age_gender,
select = c('gender', 'age', 'median_friend_count')),
gender, median_friend_count)
head(pf.fc_by_age_gender.wide2)
head(pf.fc_by_age_gender.wide1, 10)
head(pf.fc_by_age_gender.wide2, 10)
head(pf.fc_by_age_gender.wide1, 10)
pf.fc_by_age_gender.wide2 <- spread(subset(pf.fc_by_age_gender,
select = c('gender', 'age', 'median_friend_count')),
gender, median_friend_count)
head(pf.fc_by_age_gender.wide2, 10)
pf.fc_by_age_gender.wide2 <-
subset(pf.fc_by_age_gender[c('age', 'gender', 'median_friend_count')],
!is.na(gender)) %>%
spread(gender, median_friend_count) %>%
mutate(ratio = male / female)
head(pf.fc_by_age_gender.wide2)
head(pf.fc_by_age_gender.wide1, 10)
pf.fc_by_age_gender.wide2 <-
subset(pf.fc_by_age_gender[c('age', 'gender', 'median_friend_count')],
!is.na(gender)) %>%
spread(gender, median_friend_count) %>%
mutate(ratio = male / female)
head(pf.fc_by_age_gender.wide2)
ggplot(aes(x = age, y = male/female),
data = pf.fc_by_age_gender.wide2) +
geom_hline(yintercept = 1, linetype = 2, color = "orange")
ggplot(aes(x = age, y = ratio),
data = pf.fc_by_age_gender.wide2) +
geom_hline(yintercept = 1, linetype = 2, color = "orange")
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wide2) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.3, linetype = 2, color = "orange")
pf$year_joined <- floor(2014 - pf$tenure/365)
head(pf, 10)
summary(pf$year_joined)
table(pf$year_joined)
pf$year_joined_bucket <- cut(pf$year_joined,
c(2004, 2009, 2011, 2012, 2014))
pf$year_joined.bucket <- cut(pf$year_joined,
c(2004, 2009, 2011, 2012, 2014))
table(pf$year_joined.bucket)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary', fun.y = median)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary')
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary', fun.y = mean)
geom_line(stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary', fun.y = mean)
geom_line(aes(color = "black""), stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary', fun.y = mean) +
geom_line(aes(color = "black"), stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary', fun.y = mean) +
geom_line(color = "black", stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary', fun.y = mean) +
geom_line(linetype = 2, color = "black", stat = 'summary', fun.y = mean)
with(subset(pf, tenure >= 1), summary(friend_count / tenure))
ggplot(aes(x = tenure, y = pf$friendships_initiated),
data = subset(pf, !is.na(year_joined.bucket & tenure > 1))) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary', fun.y = mean) +
geom_line(linetype = 2, color = "black", stat = 'summary', fun.y = mean)
ggplot(aes(x = tenure, y = pf$friendships_initiated),
data = subset(pf, !is.na(year_joined.bucket) & tenure > 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary', fun.y = mean) +
geom_line(linetype = 2, color = "black", stat = 'summary', fun.y = mean)
ggplot(aes(x = tenure, y = pf$friendships_initiated),
data = subset(pf, !is.na(year_joined.bucket) & tenure > 1))) +
ggplot(aes(x = tenure, y = pf$friendships_initiated),
data = subset(pf, !is.na(year_joined.bucket) & (tenure > 1))) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary', fun.y = mean) +
geom_line(linetype = 2, color = "black", stat = 'summary', fun.y = mean)
```{r Friendships Initiated}
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary', fun.y = mean)
